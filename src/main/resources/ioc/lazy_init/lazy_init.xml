<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
    单例：
    默认情况下，单例bean在创建spring容器（框架）启动时就会被马上创建
    单例默认是快加载，只有显式设置lazy-init=true，才是懒加载

    多例：只能是懒加载
    懒加载机制只对单例bean有作用，对于多例bean设置懒加载没有意义，多例bean只能是懒创建，也就是在使用时候会被创建
    -->

    <!--单例默认快加载-->
    <bean id="clothes" class="com.demo.ioc.lazy_init.Clothes"></bean>

    <!--单例，显式设置成懒加载-->
    <bean id="coat" class="com.demo.ioc.lazy_init.Coat" lazy-init="true"></bean>

    <!--多例默认且只能是懒加载-->
    <bean id="pants" class="com.demo.ioc.lazy_init.Pants" scope="prototype"></bean>


    <!--lazy-init仅仅在scope属性为singleton时，才会有效，如果scope的属性值为prototype，那么即使设置了lazy-init="false",容器启动时bean也不会被实例化，而是调用getBean方法实例化-->
    <bean id="hat" class="com.demo.ioc.lazy_init.Hat" scope="prototype" lazy-init="false"></bean>

</beans>